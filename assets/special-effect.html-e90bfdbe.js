import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,d as e}from"./app-b98c1595.js";const t={},i=e(`<h1 id="特效" tabindex="-1"><a class="header-anchor" href="#特效" aria-hidden="true">#</a> 特效</h1><p>目前，WebGAL 的特效系统由 PixiJS 实现。</p><h2 id="使用特效" tabindex="-1"><a class="header-anchor" href="#使用特效" aria-hidden="true">#</a> 使用特效</h2><h3 id="初始化-pixi" tabindex="-1"><a class="header-anchor" href="#初始化-pixi" aria-hidden="true">#</a> 初始化 Pixi</h3><p>使用 <code>pixiInit</code> 初始化 Pixi。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>pixiInit;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果你要使用特效，那么你必须先运行这个命令来初始化 Pixi。</p><p>如果你想要消除已经作用的效果，你可以使用这个语法来清空效果。</p></div><h3 id="添加特效" tabindex="-1"><a class="header-anchor" href="#添加特效" aria-hidden="true">#</a> 添加特效</h3><p>使用 <code>pixiPerform</code> 添加特效。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>pixiPerform:rain; // 添加一个下雨的特效
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：特效作用后，如果没有初始化，特效会一直运行。</p><h3 id="预制特效列表" tabindex="-1"><a class="header-anchor" href="#预制特效列表" aria-hidden="true">#</a> 预制特效列表</h3><table><thead><tr><th style="text-align:left;">效果</th><th style="text-align:left;">指令</th></tr></thead><tbody><tr><td style="text-align:left;">下雨</td><td style="text-align:left;">pixiPerform:rain;</td></tr><tr><td style="text-align:left;">下雪</td><td style="text-align:left;">pixiPerform:snow;</td></tr><tr><td style="text-align:left;">樱花</td><td style="text-align:left;">pixiPerform:cherryBlossoms;</td></tr></tbody></table><h3 id="叠加特效" tabindex="-1"><a class="header-anchor" href="#叠加特效" aria-hidden="true">#</a> 叠加特效</h3><p>如果你想要叠加两种及以上效果，你可以在不使用 <code>pixiInit</code> 指令的情况下叠加不同的效果。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>pixiPerform:rain;
pixiPerform:snow;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="清除已叠加的特效" tabindex="-1"><a class="header-anchor" href="#清除已叠加的特效" aria-hidden="true">#</a> 清除已叠加的特效</h3><p>使用 <code>pixiInit</code> 来初始化，这样可以消除所有已经应用的效果。</p><h2 id="添加自定义特效" tabindex="-1"><a class="header-anchor" href="#添加自定义特效" aria-hidden="true">#</a> 添加自定义特效</h2><p>你可以下载源代码，然后找到 <code>/Core/gameScripts/pixiPerformScripts/</code> 然后新建一个 <code>PIXI.Container</code> 用于制作你所需要的特效。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 获取当前的 Pixi 效果 Container</span>
<span class="token keyword">const</span> effectsContainer <span class="token operator">=</span> <span class="token constant">RUNTIME_GAMEPLAY</span><span class="token punctuation">.</span>pixiStage<span class="token operator">!</span><span class="token punctuation">.</span>effectsContainer<span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">// 调用 Pixi App 的方式，对确定屏幕尺寸等可能有用</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token constant">RUNTIME_GAMEPLAY</span><span class="token punctuation">.</span>pixiStage<span class="token operator">!</span><span class="token punctuation">.</span>currentApp<span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">// 创建自定义特效的container</span>
<span class="token keyword">const</span> container <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">PIXI</span></span><span class="token punctuation">.</span><span class="token function">Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 添加特效</span>
effectsContainer<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>纹理文件可以放在 <code>game/tex</code> 目录下。</p><p>然后，在 文件开头导入 <code>特效注册方法</code> 注册你写的新特效。</p><p>在文件末尾使用其注册你的特效, 第一个参数是特效名, 第二个是调用特效的方法.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>registerPerform<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../pixiPerformManager&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 假设这是你的特效</span>
<span class="token keyword">function</span> <span class="token function">myPerform</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// 注册</span>
<span class="token function">registerPerform</span><span class="token punctuation">(</span><span class="token string">&#39;myPerform&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">myPerform</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，编译出支持你自定义特效的 WebGAL</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> run build<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样，你就可以在脚本中调用你的特效了</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>pixiPerform:你的新特效;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,29),p=[i];function c(o,r){return a(),s("div",null,p)}const u=n(t,[["render",c],["__file","special-effect.html.vue"]]);export{u as default};
