import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as d,c as l,a as n,d as e,b as r,e as a}from"./app-7008dfd5.js";const o={},c=a(`<h1 id="基本スクリプト" tabindex="-1"><a class="header-anchor" href="#基本スクリプト" aria-hidden="true">#</a> 基本スクリプト</h1><p>まず、ゲームは<strong>最初のスクリプト</strong>である<code>start.txt</code>から実行を開始します。シーンジャンプや選択肢の設定方法については<a href="#%E3%82%B7%E3%83%BC%E3%83%B3%E3%82%B8%E3%83%A3%E3%83%B3%E3%83%97%E3%81%A8%E9%81%B8%E6%8A%9E%E8%82%A2">こちら</a>。</p><p><strong>スクリプトを記述方法は非常に簡単であり、自然言語とほとんど変わりません。</strong></p><h2 id="キャラクターの会話" tabindex="-1"><a class="header-anchor" href="#キャラクターの会話" aria-hidden="true">#</a> キャラクターの会話</h2><p>まず、メモ帳、VS Code、Sublime などのテキストエディタを使用して、ゲームリソースディレクトリの <code>scene</code> フォルダーの中の <code>start.txt</code> を開き、最初の会話を書き始めることができます。</p><p>キャラクターの会話を書く方法は非常に簡単です。次のように入力するだけです。</p><p><strong>各行のコロンとセミコロンは半角文字である必要があることに注意してください！</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>キャラクター:セリフ; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>雪ノ下 雪乃: お茶、どうぞ。;
由比ヶ浜 結衣: あ、ありがとうございます。;
比企谷 小町: 雪乃さん、ありがとうございます！;
一色 いろは: 先輩、ありがとうございます！;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各行の後にはセミコロンを使用して終了してください。（セミコロンを書かなくても機能する場合もありますが、バグを防ぐためにセミコロンを追加することをお勧めです）。</p><h3 id="連続セリフ" tabindex="-1"><a class="header-anchor" href="#連続セリフ" aria-hidden="true">#</a> 連続セリフ</h3><p>連続した複数行のセリフでキャラクターが変更されない場合は、キャラクター名を省略できます。 キャラクターを変更する必要がある場合は、キャラクター名を再度使用します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>雪ノ下雪乃: 早かったわね;
結構待ったの？;//この時点では、セリフのキャラクター名は「雪ノ下雪乃」のままです。
比企谷八幡:今着いたところ;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ナレーター" tabindex="-1"><a class="header-anchor" href="#ナレーター" aria-hidden="true">#</a> ナレーター</h3><p>キャラクターの名前なしでナレーターを作成する場合は、コロンの前に空白のままにします(コロンは省略しないでください)。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:これはナレーターです。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="セリフを表示しながらボイスを再生する" tabindex="-1"><a class="header-anchor" href="#セリフを表示しながらボイスを再生する" aria-hidden="true">#</a> セリフを表示しながらボイスを再生する</h2><p>ご存知のように、ビジュアルノベルゲームの最も魅力的な部分は、優れた吹き替えです。このバージョンでは、セリフにボイスを導入することができます。ボイスファイルを <code>vocal</code> フォルダーに入れ、パラメータとしてセリフに追加します。構文の例は次のとおりです。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>比企谷八幡:今着いたところ。 -V3.ogg;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>連続セリフの場合は、同じ方法でボイスを導入します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>雪之下雪乃:早かったわね。 -V1.ogg;
結構待ったの？ -V2.ogg;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>ボイスの <code>-volume</code> パラメータを設定して、音量を調整できます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>比企谷八幡:今着いたところ。 -V3.ogg -volume=30; // volume が数値で、値が 0 ~ 100 の範囲にある場合に使用できる。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">ヒント</p><p>これは省略可能なパラメータです。<br> 使用されていない場合、または 0 ~ 100 以外の値が使用されている場合は、デフォルト値の 100 が使用されます。</p></div><h2 id="モノローグ" tabindex="-1"><a class="header-anchor" href="#モノローグ" aria-hidden="true">#</a> モノローグ</h2><p>多くのゲームでは、テーマを紹介したり、キャラクターの心理活動を示したりするために、モノローグを使用します。<code>intro</code> コマンドを利用して、モノローグを使用することができます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>intro:思い出には適切な台本は必要ありません。| とにかく一度言ってしまうと、| それはすべて冗談になりました。;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>モノローグの分割は、区切り文字 <code>|</code> で区切られており、各 | は改行を表します。実際のプレゼンテーションでは、上記のモノローグは次のようになります。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>思い出には適切な台本は必要ありません。
とにかく一度言ってしまうと、
それはすべて冗談になりました。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="背景画像と立ち絵の変更" tabindex="-1"><a class="header-anchor" href="#背景画像と立ち絵の変更" aria-hidden="true">#</a> 背景画像と立ち絵の変更</h2><p>WebGAL が背景画像と立ち絵を読み取れるようにするには、背景画像を <code>background</code> フォルダーに配置し、立ち絵を <code>figure</code> フォルダーに配置する必要があります。</p><p>次に、次の簡単なステートメントを使用して、現在表示されている背景画像と立ち絵を変更します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeBg:testBG03.jpg;//背景画像を変更する
changeFigure:testFigure02.png;//立ち絵を変更する
changeBg:none;//背景を表示しない
changeFigure:none;//立ち絵を表示しない
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>背景画像または立ち絵を変更した後、次のステートメントを実行するためにマウスをもう一度クリックする必要があります。背景画像と立ち絵を変更した直後に次のステートメントの内容を実行したい場合は、<code>-next</code> を使用してください。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeBg:testBG03.jpg -next; //背景画像を変更する
changeFigure:testFigure02.png -next;//立ち絵を変更する
一色:先輩、ありがとうございます！;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>こうしたら、ゲームは背景画像または立ち絵を変更した直後に、次のステートメントを実行します。</p><h2 id="立ち絵を異なる位置に配置する" tabindex="-1"><a class="header-anchor" href="#立ち絵を異なる位置に配置する" aria-hidden="true">#</a> 立ち絵を異なる位置に配置する</h2><p>3つの異なる位置に立ち絵を配置することができます。立ち絵を配置するステートメントに、パラメータとして、位置を追加するだけです。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeFigure:testFigure03.png -left;
changeFigure:testFigure04.png;
changeFigure:testFigure05.png -right;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上記のは、左、中央、右の3つの位置に3つの異なる立ち絵を配置しています。3つの異なる位置の立ち絵は互いに独立しているため、クリアする必要がある場合は、別々にクリアする必要があります。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeFigure:none -left;
changeFigure:none;
changeFigure:none -right;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>立ち絵を変更した直後にステートメントを実行したい場合、<code>-next</code> を使用してください。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeFigure:testFigure03.png -left -next;
changeFigure:testFigure04.png -next;
changeFigure:testFigure03.png -right -next;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="id-付きの立ち絵" tabindex="-1"><a class="header-anchor" href="#id-付きの立ち絵" aria-hidden="true">#</a> ID 付きの立ち絵</h2><p>立ち絵をより正確に制御したい場合は、立ち絵に <code>id</code> を指定することがお勧めです。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeFigure:testFigure03.png -id=test1; // ID 付きの立ち絵を表示する
changeFigure:none -id=test1; // ID で立ち絵を表示しない
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意: ID 付きの立ち絵の位置をリセットしたい場合は、まず表示しないようにしてから再度表示してください。</p><h2 id="ミニアバターを配置する" tabindex="-1"><a class="header-anchor" href="#ミニアバターを配置する" aria-hidden="true">#</a> ミニアバターを配置する</h2><p>多くのゲームでは、テキストボックスの左下隅にミニアバターを配置できます。このエンジンで使用される構文は次のとおりです。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>miniAvatar:minipic_test.png;// minipic_test.png をミニアバターとして表示する
miniAvatar:none;// ミニアバターを表示しない
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="シーンジャンプと選択肢" tabindex="-1"><a class="header-anchor" href="#シーンジャンプと選択肢" aria-hidden="true">#</a> シーンジャンプと選択肢</h2><p>ビジュアルノベルゲームでは、シーンジャンプと選択肢が欠かせないです。WebGAL でも、シーンジャンプと選択肢をサポートしています。</p><p>スクリプトを複数の <code>txt</code> ファイルに分割し、簡単なステートメントを使用して現在実行中のシーンを切り替えることができます。</p><div class="hint-container warning"><p class="hint-container-title">警告</p><p>シーンジャンプまたはシーンコールの後、シーンはクリアされません。これは、前のシーンの BGM 、立ち絵、背景画像、およびその他のリソースが次のシーンに継承されることも意味します。</p><p>WebGAL エディターを使用する場合は、WebGAL エディターは、1つのシーンのみをプレビューするときに前のシーンの効果が表示されないため、特に注意を払う必要があります。そのため、プレビュー効果と実際のゲーム実行効果は異なる場合があります。シーンジャンプの前にシーンクリーンアップを適切に処理することを検討する必要があります。</p></div><p><code>Chapter-1.txt</code> と <code>Chapter-2.txt</code> の 2 つのスクリプトがある場合、<code>Chapter-1.txt</code> の実行が終了した後に <code>Chapter-2.txt</code> に対応するシーンにジャンプする場合は、次のステートメントを使用します。</p><h3 id="シーンジャンプ" tabindex="-1"><a class="header-anchor" href="#シーンジャンプ" aria-hidden="true">#</a> シーンジャンプ</h3><p>ステートメント:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeScene:Chapter-2.txt; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>(Chapter-1.txt) 
......
......
changeScene:Chapter-2.txt;
次に実行するのは、Chapter-2.txt の内容です。
...... 
......
(Chapter-2.txt)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>このコマンドを実行すると、新しいシーンに切り替えてゲームを続行します。新しいシーンは、次にマウスをクリックした後に実行されます。</p><h3 id="シーンコール" tabindex="-1"><a class="header-anchor" href="#シーンコール" aria-hidden="true">#</a> シーンコール</h3><p>呼び出したシーンを実行した後、前のシーン(親シーン)に戻る必要がある場合は、<code>callScene</code> コマンドを使用してシーンを呼び出す必要があります。</p><p>ステートメント:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>callScene:Chapter-2.txt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>(Chapter-1.txt)
...... 
......
callScene:Chapter-2.txt;
次に実行するのは、Chapter-2.txt の内容です。
......
......
(Chapter-2.txt) 
......
(Chapter-2.txt の実行が完了しました)  
親シーンに戻り、親シーンの実行を続行します。
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="選択肢" tabindex="-1"><a class="header-anchor" href="#選択肢" aria-hidden="true">#</a> 選択肢</h3><p>スクリプトに選択肢があり、異なるオプションを選択して異なるシーンに入りたい場合は、次のステートメントを使用してください。</p><p>ここで、<code>|</code> は区切り文字です。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>choose:彼女に声をかける:Chapter-2.txt|家に帰る:Chapter-3.txt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>オプションのテキストを、オプションを選択した後に入りたいスクリプトファイルと 1 対 1 で対応させるだけで、選択肢の機能を実現できます。</p><h2 id="ゲームを終了してタイトルに戻る" tabindex="-1"><a class="header-anchor" href="#ゲームを終了してタイトルに戻る" aria-hidden="true">#</a> ゲームを終了してタイトルに戻る</h2><p>スクリプトが終了した後にゲームを終了してタイトルに戻りたい場合は、次のステートメントを使用してください。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>end;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>これにより、ゲームはタイトル画面に戻ります。</p><h2 id="bgmの使用" tabindex="-1"><a class="header-anchor" href="#bgmの使用" aria-hidden="true">#</a> BGMの使用</h2><p>BGM を使用する方法は非常に簡単です。BGM ファイル を /bgm フォルダーに配置し、必要なときに再生するだけです。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bgm:サマーシャドウ.mp3;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>BGM の <code>-volume</code> パラメータを設定して、音量を調整できます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bgm:サマーシャドウ.mp3 -volume=30; // volume が数値で、値が 0 ~ 100 の範囲にある場合に使用できる。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>さらに、フェードイン再生に <code>-enter</code> パラメータを使用できます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bgm:サマーシャドウ.mp3 -enter=3000; // enter が数値で、値が 0 以上の場合に使用できる。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最後に、次のステートメントを使用して、BGM をフェードアウトできます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bgm:none enter=3000; // enter が数値で、値が 0 以上の場合に使用できる。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">ヒント</p><p><code>-volume</code> と <code>-enter</code> はオプションのパラメータです。<br><code>-volume</code> が使用されていない場合、または使用できない値が使用されている場合は、デフォルト値の 100 が使用されます。<br><code>-enter</code> が使用されていない場合、または使用できない値が使用されている場合は、デフォルト値の 0 が使用されます。</p></div><h2 id="効果音の使用" tabindex="-1"><a class="header-anchor" href="#効果音の使用" aria-hidden="true">#</a> 効果音の使用</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>playEffect:xxx.mp3;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>短い効果音を再生できます。</p><p><strong>効果音のループ</strong></p><p>効果音に ID を指定すると、効果音のループが自動的に有効になります。後で同じ ID を使用して停止します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>playEffect:xxx.mp3 -id=xxx; // 効果音のループを有効にする
playEffect:none -id=xxx; // 効果音のループを停止する
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="短い動画を再生する" tabindex="-1"><a class="header-anchor" href="#短い動画を再生する" aria-hidden="true">#</a> 短い動画を再生する</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>playVideo:OP.mp4; // 動画は /game/video フォルダーに配置する必要があります
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="鑑賞のためにbgmやcgのアンロック" tabindex="-1"><a class="header-anchor" href="#鑑賞のためにbgmやcgのアンロック" aria-hidden="true">#</a> 鑑賞のためにBGMやCGのアンロック</h2><p>バージョン4.2以降、WebGAL は BGM と CG の鑑賞機能を追加しました。次のステートメントを実行することで、BGM または CG をタイミングよくアンロックすることができます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>unlockCg:xgmain.jpeg -name=喫茶ステラと死神の蝶 -series=1; // CG をアンロックする
unlockBgm:s_Title.mp3 -name=Smiling-Swinging!!; // BGM をアンロックする
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>その中で、<code>series</code> パラメータはオプションであり、CG がどのシリーズに属しているかを表します。同じシリーズの CG は、将来統合されて一緒に表示されます(つまり、同じシリーズの切り替え可能な CG として表示されます)。</p><h2 id="テキストボックスを閉じる" tabindex="-1"><a class="header-anchor" href="#テキストボックスを閉じる" aria-hidden="true">#</a> テキストボックスを閉じる</h2><p>一部の特殊効果を表示するために、テキストボックスを一時的に閉じたい場合は、次のステートメントを使用してください。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>setTextbox:hide;  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>setTextbox</code> コマンドの内容が <code>hide</code> の場合、テキストボックスは閉じられ、ユーザーはそれを開くことができなくなります。テキストボックスを再表示する場合は、このコマンドを再度使用して、<code>hide</code> 以外の内容を入力してください。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>setTextbox:on; // hide 以外の内容を入力してください。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="アニメーション効果の使用" tabindex="-1"><a class="header-anchor" href="#アニメーション効果の使用" aria-hidden="true">#</a> アニメーション効果の使用</h2><h3 id="背景画像または立ち絵にアニメーションを設定する" tabindex="-1"><a class="header-anchor" href="#背景画像または立ち絵にアニメーションを設定する" aria-hidden="true">#</a> 背景画像または立ち絵にアニメーションを設定する</h3><p>Use statement <code>setAnimation:animation name -target=target object;</code></p><p><strong>例:</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>setAnimation:enter-from-bottom -target=fig-center -next; // 真ん中の立ち絵に下から入るアニメーションを設定し、次のステートメントに進む。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="事前に作成されたアニメーション" tabindex="-1"><a class="header-anchor" href="#事前に作成されたアニメーション" aria-hidden="true">#</a> 事前に作成されたアニメーション</h3><table><thead><tr><th style="text-align:left;">アニメーション</th><th style="text-align:left;">ファイル</th><th style="text-align:left;">継続時間 (ミリ秒)</th></tr></thead><tbody><tr><td style="text-align:left;">フェードイン</td><td style="text-align:left;">enter.json</td><td style="text-align:left;">300</td></tr><tr><td style="text-align:left;">フェードアウト</td><td style="text-align:left;">exit.json</td><td style="text-align:left;">300</td></tr><tr><td style="text-align:left;">左右に振る</td><td style="text-align:left;">shake.json</td><td style="text-align:left;">1000</td></tr><tr><td style="text-align:left;">下から入る</td><td style="text-align:left;">enter-from-bottom.json</td><td style="text-align:left;">500</td></tr><tr><td style="text-align:left;">左から入る</td><td style="text-align:left;">enter-from-right.json</td><td style="text-align:left;">500</td></tr><tr><td style="text-align:left;">右から入る</td><td style="text-align:left;">enter-from-left.json</td><td style="text-align:left;">500</td></tr><tr><td style="text-align:left;">1回前後に動かす</td><td style="text-align:left;">move-front-and-back.json</td><td style="text-align:left;">1000</td></tr></tbody></table><p>現在、アニメーション化できるオブジェクトは次のとおりです。</p><table><thead><tr><th style="text-align:left;">オブジェクト</th><th style="text-align:left;">実際のオブジェクト</th></tr></thead><tbody><tr><td style="text-align:left;">fig-left</td><td style="text-align:left;">左の立ち絵</td></tr><tr><td style="text-align:left;">fig-center</td><td style="text-align:left;">真ん中の立ち絵</td></tr><tr><td style="text-align:left;">fig-right</td><td style="text-align:left;">右の立ち絵</td></tr><tr><td style="text-align:left;">bg-main</td><td style="text-align:left;">背景</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">ID 付き立ち絵</td></tr></tbody></table><h3 id="カスタムアニメーション" tabindex="-1"><a class="header-anchor" href="#カスタムアニメーション" aria-hidden="true">#</a> カスタムアニメーション</h3><p>アニメーションファイルは <code>/game/animation</code> にあります。独自のカスタムアニメーションを作成することができます。</p>`,115),p={href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON",target:"_blank",rel:"noopener noreferrer"},u=a(`<p>各アニメーションファイルは、JSON 配列を使用して記述された <strong>アニメーションシーケンス</strong> を表します。サンプルとして、「左から入る」のアニメーションを次に示します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>enter-from-left.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;alpha&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;scale&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;pivot&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
      <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">0.5</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">-50</span><span class="token punctuation">,</span>
      <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;rotation&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;blur&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;alpha&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;scale&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  
      <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;pivot&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
      <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">0.5</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;rotation&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;blur&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span> <span class="token number">500</span>
  <span class="token punctuation">}</span> 
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各アトリビュートの意味は次のとおりです。</p><table><thead><tr><th style="text-align:left;">アトリビュート</th><th style="text-align:left;">意味</th></tr></thead><tbody><tr><td style="text-align:left;">alpha</td><td style="text-align:left;">透明度、範囲 0 ～ 1</td></tr><tr><td style="text-align:left;">scale</td><td style="text-align:left;">ズーム</td></tr><tr><td style="text-align:left;">pivot</td><td style="text-align:left;">アンカーポイント</td></tr><tr><td style="text-align:left;">position</td><td style="text-align:left;">位置オフセット</td></tr><tr><td style="text-align:left;">rotation</td><td style="text-align:left;">回転角度</td></tr><tr><td style="text-align:left;">blur</td><td style="text-align:left;">ガススぼかし</td></tr><tr><td style="text-align:left;">duration</td><td style="text-align:left;">継続時間 (ミリ秒 (ms) 単位)</td></tr></tbody></table><p>次に、カスタムアニメーションのファイル名(拡張子なし)を <code>animationTable</code> に追加する必要があります。</p><p>ファイル <code>animationTable.json</code> で:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token string">&quot;enter-from-left&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;enter-from-bottom&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;enter-from-right&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>次に、スクリプトでそれを呼び出すことができます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>setAnimation:enter-from-left -target=fig-left -next;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="一部の属性を省略する" tabindex="-1"><a class="header-anchor" href="#一部の属性を省略する" aria-hidden="true">#</a> 一部の属性を省略する</h3><p>アニメーションで一部のアトリビュートのみを操作する必要がある場合は、ほかのアトリビュートを空のままにして、デフォルトのままにすることができます。</p><p><strong>例:<code>enter.json</code></strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;alpha&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;alpha&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span> <span class="token number">300</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="変換の使用" tabindex="-1"><a class="header-anchor" href="#変換の使用" aria-hidden="true">#</a> 変換の使用</h3><p>継続時間が 0 ミリ秒で、タイムスライスが 1 つだけのアニメーションは変換です。</p><p><strong>例:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;alpha&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特殊効果の追加" tabindex="-1"><a class="header-anchor" href="#特殊効果の追加" aria-hidden="true">#</a> 特殊効果の追加</h2><p>現在、WebGAL の特殊効果システムは PixiJS によって実装されています。</p><h3 id="pixiの初期化" tabindex="-1"><a class="header-anchor" href="#pixiの初期化" aria-hidden="true">#</a> Pixiの初期化</h3><p><code>pixiInit</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pixiInit; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注意:</strong></p><p><strong>1. 特殊効果を追加したい場合は、まずこのコマンドを実行して Pixi を初期化する必要があります。</strong></p><p><strong>2. 追加した特殊効果をクリアしたい場合も、このコマンドを実行してください。</strong></p><h3 id="特殊効果の追加-1" tabindex="-1"><a class="header-anchor" href="#特殊効果の追加-1" aria-hidden="true">#</a> 特殊効果の追加</h3><p><code>pixiPerform</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pixiPerform:rain; // 雨の特殊効果を追加する
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意: 特殊効果が追加した後、初期化されていない場合は継続して実行されます。</p><h3 id="事前に作成された特殊効果" tabindex="-1"><a class="header-anchor" href="#事前に作成された特殊効果" aria-hidden="true">#</a> 事前に作成された特殊効果</h3><table><thead><tr><th style="text-align:left;">Effect</th><th style="text-align:left;">Command</th></tr></thead><tbody><tr><td style="text-align:left;">雨</td><td style="text-align:left;">pixiPerform:rain;</td></tr><tr><td style="text-align:left;">雪</td><td style="text-align:left;">pixiPerform:snow;</td></tr></tbody></table><h3 id="重ね合わせた特殊効果" tabindex="-1"><a class="header-anchor" href="#重ね合わせた特殊効果" aria-hidden="true">#</a> 重ね合わせた特殊効果</h3><p>2 つ以上の特殊効果を重ね合わせたい場合は、<code>pixiInit</code> コマンドを使用せずに異なる特殊効果を重ね合わせることができます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pixiPerform:rain;
pixiPerform:snow;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特殊効果のクリア" tabindex="-1"><a class="header-anchor" href="#特殊効果のクリア" aria-hidden="true">#</a> 特殊効果のクリア</h3><p><code>pixiInit</code> を使用して初期化すると、追加したすべての特殊効果をクリアすることができます。</p><h3 id="ムービーモード-テスト機能" tabindex="-1"><a class="header-anchor" href="#ムービーモード-テスト機能" aria-hidden="true">#</a> ムービーモード(テスト機能)</h3><p>ムービーモードのオンとオフを切り替えるには、次のスクリプトを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>filmMode:enable; // ムービーモードをオンにする
filmMode:none; // ムービーモードをオフにする
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,40);function v(m,g){const t=i("ExternalLinkIcon");return d(),l("div",null,[c,n("p",null,[e("アニメーションファイルは JSON を使用して記述します。JSON 構文を知りたい方は "),n("a",p,[e("こちら"),r(t)]),e(" 。")]),u])}const x=s(o,[["render",v],["__file","base-scripts.html.vue"]]);export{x as default};
