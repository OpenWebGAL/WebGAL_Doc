import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,d as n}from"./app-7639c4a5.js";const l={},t=n(`<h1 id="effects" tabindex="-1"><a class="header-anchor" href="#effects" aria-hidden="true">#</a> Effects</h1><p>Currently, WebGAL&#39;s effect system is powered by PixiJS.</p><h2 id="using-effects" tabindex="-1"><a class="header-anchor" href="#using-effects" aria-hidden="true">#</a> Using Effects</h2><h3 id="initialize-pixi" tabindex="-1"><a class="header-anchor" href="#initialize-pixi" aria-hidden="true">#</a> Initialize Pixi</h3><p>Initialize Pixi using <code>pixiInit</code>.</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#8BE9FD;">pixiInit</span><span style="color:#6272A4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Note</p><p>If you want to use effects, you must run this command to initialize Pixi first.</p><p>If you want to clear the effects that have already taken effect, you can use this syntax to clear the effects.</p></div><h3 id="add-effects" tabindex="-1"><a class="header-anchor" href="#add-effects" aria-hidden="true">#</a> Add Effects</h3><p>Add effects using <code>pixiPerform</code>.</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#8BE9FD;">pixiPerform</span><span style="color:#FF5555;">:</span><span style="color:#F8F8F2;">rain</span><span style="color:#6272A4;">; // Add a rain effect</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Note: After the effect takes effect, if it is not re initialized, the effect will continue to run.</p><h3 id="list-of-built-in-effects" tabindex="-1"><a class="header-anchor" href="#list-of-built-in-effects" aria-hidden="true">#</a> List of Built-in Effects</h3><table><thead><tr><th style="text-align:left;">Effect</th><th style="text-align:left;">Command</th></tr></thead><tbody><tr><td style="text-align:left;">Rain</td><td style="text-align:left;">pixiPerform:rain;</td></tr><tr><td style="text-align:left;">Snow</td><td style="text-align:left;">pixiPerform:snow;</td></tr><tr><td style="text-align:left;">Heavy Snow</td><td style="text-align:left;">pixiPerform:heavySnow;</td></tr><tr><td style="text-align:left;">Cherry Blossoms</td><td style="text-align:left;">pixiPerform:cherryBlossoms;</td></tr></tbody></table><h3 id="superimpose-effects" tabindex="-1"><a class="header-anchor" href="#superimpose-effects" aria-hidden="true">#</a> Superimpose Effects</h3><p>If you want to superimpose two or more effects, you can superimpose different effects without using the <code>pixiInit</code> command.</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#8BE9FD;">pixiPerform</span><span style="color:#FF5555;">:</span><span style="color:#F8F8F2;">rain</span><span style="color:#6272A4;">;</span></span>
<span class="line"><span style="color:#8BE9FD;">pixiPerform</span><span style="color:#FF5555;">:</span><span style="color:#F8F8F2;">snow</span><span style="color:#6272A4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clear-superimposed-effects" tabindex="-1"><a class="header-anchor" href="#clear-superimposed-effects" aria-hidden="true">#</a> Clear Superimposed Effects</h3><p>Initialize using <code>pixiInit</code> to clear all effects that have been applied.</p><h2 id="adding-custom-effects" tabindex="-1"><a class="header-anchor" href="#adding-custom-effects" aria-hidden="true">#</a> Adding Custom Effects</h2><p>You can download the source code, then find <code>/Core/gameScripts/pixiPerformScripts/</code> and create a new <code>PIXI.Container</code> to create the effects you need.</p><p>The effects container is divided into a foreground container and a background container, and the foreground container is used here as an example.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#6272A4;">// Get the current Pixi effect Container</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> effectsContainer </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> WebGAL.gameplay.pixiStage</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">.foregroundEffectsContainer</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">// Call the Pixi App method, which may be useful for determining screen size, etc.</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">RUNTIME_GAMEPLAY</span><span style="color:#F8F8F2;">.pixiStage</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">.currentApp</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">// Create a container for custom effects</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> container </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">PIXI</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Container</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">// Add effects</span></span>
<span class="line"><span style="color:#F8F8F2;">effectsContainer.</span><span style="color:#50FA7B;">addChild</span><span style="color:#F8F8F2;">(container);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Texture files can be placed in the <code>game/tex</code> directory.</p><p>Then, import the <code>effect registration method</code> at the beginning of the file to register the new effect you wrote.</p><p>At the end of the file, use it to register your effect, the first parameter is the effect name, and the second parameter is the method to call the effect.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> {registerPerform} </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">../pixiPerformManager</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Let&#39;s say this is your effect</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">myPerform</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// ...</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Register</span></span>
<span class="line"><span style="color:#50FA7B;">registerPerform</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">myPerform</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, { </span><span style="color:#50FA7B;">fg</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">myPerform</span><span style="color:#F8F8F2;">(parameters) });</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finally, compile WebGAL with support for your custom effects</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#50FA7B;">yarn</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">run</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">build</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This way, you can call your effects in the script</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="shiki dracula" style="background-color:#282A36;" tabindex="0"><code><span class="line"><span style="color:#8BE9FD;">pixiPerform</span><span style="color:#FF5555;">:</span><span style="color:#F8F8F2;">myPerform</span><span style="color:#6272A4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,30),i=[t];function o(r,c){return s(),a("div",null,i)}const f=e(l,[["render",o],["__file","special-effect.html.vue"]]);export{f as default};
