import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as d,c as a,d as i}from"./app-fe0f3710.js";const s={},n=i(`<h1 id="会話" tabindex="-1"><a class="header-anchor" href="#会話" aria-hidden="true">#</a> 会話</h1><div class="hint-container warning"><p class="hint-container-title">注意</p><p>各行のコロンとセミコロンは半角文字である必要があることに注意してください！</p></div><p><strong>スクリプトを記述方法は非常に簡単であり、自然言語とほとんど変わりません。</strong></p><h2 id="キャラクターの会話" tabindex="-1"><a class="header-anchor" href="#キャラクターの会話" aria-hidden="true">#</a> キャラクターの会話</h2><p>まず、メモ帳、VS Code、Sublime などのテキストエディタを使用して、ゲームリソースディレクトリの <code>scene</code> フォルダーの中の <code>start.txt</code> を開き、最初の会話を書き始めることができます。</p><p>キャラクターの会話を書く方法は非常に簡単です。<code>キャラクター:セリフ</code>を入力するだけです。</p><p>例:</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>雪ノ下 雪乃: お茶、どうぞ。;
由比ヶ浜 結衣: あ、ありがとうございます。;
比企谷 小町: 雪乃さん、ありがとうございます！;
一色 いろは: 先輩、ありがとうございます！;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各行の後にはセミコロンを使用して終了してください。（セミコロンを書かなくても機能する場合もありますが、バグを防ぐためにセミコロンを追加することをお勧めです）。</p><h2 id="連続セリフ" tabindex="-1"><a class="header-anchor" href="#連続セリフ" aria-hidden="true">#</a> 連続セリフ</h2><p>連続した複数行のセリフでキャラクターが変更されない場合は、キャラクター名を省略できます。 キャラクターを変更する必要がある場合は、キャラクター名を再度使用します。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>雪ノ下雪乃: 早かったわね;
; // この時点では、セリフのキャラクター名は「雪ノ下雪乃」のままです
結構待ったの？;
比企谷八幡:今着いたところ;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ナレーター" tabindex="-1"><a class="header-anchor" href="#ナレーター" aria-hidden="true">#</a> ナレーター</h2><p>キャラクターの名前なしでナレーターを作成する場合は、コロンの前に空白のままにします(コロンは省略しないでください)。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>:これはナレーターです;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="モノローグ" tabindex="-1"><a class="header-anchor" href="#モノローグ" aria-hidden="true">#</a> モノローグ</h2><p>多くのゲームでは、テーマを紹介したり、キャラクターの心理活動を示したりするために、モノローグを使用します。<code>intro</code> コマンドを利用して、モノローグを使用することができます。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>intro:思い出には適切な台本は必要ありません。| とにかく一度言ってしまうと、| それはすべて冗談になりました。;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>モノローグの分割は、区切り文字 <code>|</code> で区切られており、各 | は改行を表します。実際のプレゼンテーションでは、上記のモノローグは次のようになります。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>思い出には適切な台本は必要ありません。
とにかく一度言ってしまうと、
それはすべて冗談になりました。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="テキストボックスを閉じる" tabindex="-1"><a class="header-anchor" href="#テキストボックスを閉じる" aria-hidden="true">#</a> テキストボックスを閉じる</h2><p>一部の特殊効果を表示するために、テキストボックスを一時的に閉じたい場合は、次のステートメントを使用してください。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>setTextbox:hide;  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>setTextbox</code> コマンドの内容が <code>hide</code> の場合、テキストボックスは閉じられ、ユーザーはそれを開くことができなくなります。テキストボックスを再表示する場合は、このコマンドを再度使用して、<code>hide</code> 以外の内容を入力してください。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>setTextbox:on; // hide 以外の内容を入力してください。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="ゲームを終了してタイトルに戻る" tabindex="-1"><a class="header-anchor" href="#ゲームを終了してタイトルに戻る" aria-hidden="true">#</a> ゲームを終了してタイトルに戻る</h2><p>スクリプトが終了した後にゲームを終了してタイトルに戻りたい場合は、次のステートメントを使用してください。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>end;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="ムービーモード-テスト機能" tabindex="-1"><a class="header-anchor" href="#ムービーモード-テスト機能" aria-hidden="true">#</a> ムービーモード(テスト機能)</h2><p>ムービーモードのオンとオフを切り替えるには、次のスクリプトを実行します。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>filmMode:enable; // ムービーモードをオンにする
filmMode:none; // ムービーモードをオフにする
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,31),r=[n];function l(c,o){return d(),a("div",null,r)}const v=e(s,[["render",l],["__file","dialogue.html.vue"]]);export{v as default};
