import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as l,c,a as e,e as n,b as a,w as d,d as s}from"./app-b98c1595.js";const u={},o=s(`<h1 id="背景と立ち絵" tabindex="-1"><a class="header-anchor" href="#背景と立ち絵" aria-hidden="true">#</a> 背景と立ち絵</h1><h2 id="背景-立ち絵の変更" tabindex="-1"><a class="header-anchor" href="#背景-立ち絵の変更" aria-hidden="true">#</a> 背景/立ち絵の変更</h2><p>WebGALで背景と立ち絵を読み込むには、背景画像は<code>background</code>フォルダに、立ち絵画像は<code>figure</code>フォルダに配置する必要があります。</p><p>次に、以下の簡単な文で現在表示されている背景画像と立ち絵を変更することができます。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeBg:testBG03.jpg; // 背景を変更
changeFigure:testFigure02.png; // 立ち絵を変更
changeBg:none; // 背景を閉じる
changeFigure:none; // 立ち絵を閉じる
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>背景画像や立ち絵を変更した後、次の会話を表示するために再度マウスをクリックする必要があることに気付くかもしれません。背景/立ち絵を変更した後、すぐに次の文の内容を実行したい場合は、<code>-next</code>パラメータを使用してください。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeBg:testBG03.jpg -next;
changeFigure:testFigure02.png -next; // 立ち絵を変更
一色:先輩ありがとう！;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>このようにすると、背景/立ち絵の置き換え後にプログラムはすぐに次の文を実行します。</p><h2 id="立ち絵を異なる位置に配置する" tabindex="-1"><a class="header-anchor" href="#立ち絵を異なる位置に配置する" aria-hidden="true">#</a> 立ち絵を異なる位置に配置する</h2><p>現在、ページの3つの異なる位置に異なる立ち絵を配置できます。立ち絵を配置する文に配置する位置を追加するだけで済みます。例を以下に示します。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeFigure:testFigure03.png -left;
changeFigure:testFigure04.png;
changeFigure:testFigure03.png -right;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上記の3行は、それぞれ左、中央、右の3つの異なる位置に対応しています。3つの異なる位置の立ち絵は相互に独立しているため、立ち絵を消去する必要がある場合は、それぞれ独立して消去する必要があります。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeFigure:none -left;
changeFigure:none;
changeFigure:none -right;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>立ち絵を変更した後、すぐに次の文を実行したい場合は、以前と同様に<code>-next</code>パラメータを追加します。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeFigure:testFigure03.png -left -next;
changeFigure:testFigure04.png -next;
changeFigure:testFigure03.png -right -next;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="id付きの自由な立ち絵" tabindex="-1"><a class="header-anchor" href="#id付きの自由な立ち絵" aria-hidden="true">#</a> ID付きの自由な立ち絵</h2><p>もし、より詳細に立ち絵を制御したい場合や、3つ以上の立ち絵を使用したい場合は、立ち絵に <code>id</code> と初期位置を指定することができます。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>; // 右側に初期位置がある自由な立ち絵
changeFigure:testFigure03.png -left -id=test1;
; // idで立ち絵を閉じる
changeFigure:none -id=test1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">ヒント</p><p>ID付きの立ち絵の位置をリセットする場合は、まず閉じてから再度開いてください。</p></div><h2 id="ミニアバターを配置する" tabindex="-1"><a class="header-anchor" href="#ミニアバターを配置する" aria-hidden="true">#</a> ミニアバターを配置する</h2><p>多くのゲームでは、テキストボックスの左下にミニアバターを配置できます。以下は、このエンジンで使用される構文です。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>; // 左下にminipic_test.pngを表示する
miniAvatar:minipic_test.png;
; // このミニアバターを閉じる
miniAvatar:none;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cgをアンロックして鑑賞する" tabindex="-1"><a class="header-anchor" href="#cgをアンロックして鑑賞する" aria-hidden="true">#</a> CGをアンロックして鑑賞する</h2><p><code>unlockCg</code>を使用して、CG鑑賞のCGをアンロックします。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>; // CGをアンロックして名前を付ける
unlockCg:xgmain.jpeg -name=星光咖啡馆与死神之蝶 -series=1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>ここで、<code>-series</code>パラメータはオプションであり、現在の立ち絵がどのシリーズに属するかを表します。同じシリーズの立ち絵は、後で統合して表示されます（つまり、同じシリーズのCGを切り替えて表示できます）。</p><h2 id="立ち絵を設定するときにエフェクトを設定する" tabindex="-1"><a class="header-anchor" href="#立ち絵を設定するときにエフェクトを設定する" aria-hidden="true">#</a> 立ち絵を設定するときにエフェクトを設定する</h2>`,27),g=s(`<p>立ち絵を設定するときに、立ち絵にいくつかの変換とフィルターエフェクトを設定できます。以下に例を示します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeFigure:stand.png -transform={&quot;alpha&quot;:1,&quot;position&quot;:{&quot;x&quot;:0,&quot;y&quot;:500},&quot;scale&quot;:{&quot;x&quot;:1,&quot;y&quot;:1},&quot;rotation&quot;:0,&quot;blur&quot;:0,&quot;oldFilm&quot;:0,&quot;dotFilm&quot;:0,&quot;reflectionFilm&quot;:0,&quot;glitchFilm&quot;:0,&quot;rgbFilm&quot;:0,&quot;godrayFilm&quot;:0} -next;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="既存の立ち絵に変換エフェクトを設定する" tabindex="-1"><a class="header-anchor" href="#既存の立ち絵に変換エフェクトを設定する" aria-hidden="true">#</a> 既存の立ち絵に変換エフェクトを設定する</h2>`,3),v=e("p",null,[n("また、"),e("code",null,"setTransform"),n("を使用して、既存の立ち絵に直接エフェクトを設定することもできます。例えば、")],-1),h=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`setTransform:{"position":{"x":100,"y":0}} -target=fig-center -duration=0;
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),m=e("p",null,"ここでは、既存の立ち絵に変換を設定しました。",-1);function p(b,x){const i=r("RouterLink");return l(),c("div",null,[o,e("p",null,[n("エフェクトのフィールドの説明については、"),a(i,{to:"/ja/webgal-script/animation.html"},{default:d(()=>[n("アニメーション")]),_:1}),n("を参照してください。")]),g,e("p",null,[n("エフェクトのフィールドの説明については、"),a(i,{to:"/ja/webgal-script/animation.html"},{default:d(()=>[n("アニメーション")]),_:1}),n("を参照してください。")]),v,h,m])}const f=t(u,[["render",p],["__file","bg-and-figure.html.vue"]]);export{f as default};
