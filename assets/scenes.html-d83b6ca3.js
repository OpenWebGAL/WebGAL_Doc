import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as d,e as n}from"./app-97d850a3.js";const i={},l=n(`<h1 id="场景与分支" tabindex="-1"><a class="header-anchor" href="#场景与分支" aria-hidden="true">#</a> 场景与分支</h1><p>在 视觉小说 中，跳转章节、场景与分支选择是不可或缺的，因此，WebGAL 也支持场景跳转与分支选择。</p><p>你可以将你的剧本拆分成多个 txt 文档，并使用一个简单的语句来切换当前运行的剧本。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>在跳转场景、分支选择或调用场景后，舞台并不会被清除。这也就意味着上一个场景应用的背景音乐、立绘、背景图片等效果会被继承到下一场景。</p><p>如果你使用 WebGAL Terre 可视化编辑器，你应该格外注意，因为编辑器在预览单独的一个场景的时候并不关心上一个场景会带来什么效果。因此，预览效果和实际游戏运行效果可能会有所差别，你应该考虑妥善处理场景跳转前的舞台清理工作。</p></div><h2 id="场景跳转" tabindex="-1"><a class="header-anchor" href="#场景跳转" aria-hidden="true">#</a> 场景跳转</h2><p>假如你现在写了两个章节的剧本，分别是 <code>Chapter-1.txt</code> 与 <code>Chapter-2.txt</code> 。在 <code>Chapter-1.txt</code> 运行结束后，你希望跳转到 <code>Chapter-2.txt</code> 对应的场景，请使用以下语句：</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeScene:Chapter-2.txt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例：</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>(Chapter-1.txt)
......
......
; // 接下来执行的就是Chapter-2.txt的内容了
changeScene:Chapter-2.txt;
......
......
(Chapter-2.txt)
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过执行这条命令，你将切换游戏场景，并使接下来的剧情发展按照新的场景剧本运行。新的剧本会在下一次鼠标点击后运行。</p><h2 id="场景调用" tabindex="-1"><a class="header-anchor" href="#场景调用" aria-hidden="true">#</a> 场景调用</h2><p>如果你需要在一个场景中调用另一段场景，你可以使用 <code>callScene</code>，在调用的场景运行完毕后会回到原场景。</p><p>语句：</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>callScene:Chapter-2.txt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例：</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>(Chapter-1.txt)
......
......
callScene:Chapter-2.txt;
; // 接下来执行的就是Chapter-2.txt的内容了
......
......
(Chapter-2.txt)
......
......
(Chapter-2.txt执行完毕)
; // 回父场景，继续执行父场景语句
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分支选择" tabindex="-1"><a class="header-anchor" href="#分支选择" aria-hidden="true">#</a> 分支选择</h2><p>如果你的剧本存在分支选项，你希望通过选择不同的选项进入不同的章节，请使用 <code>choose</code>。<br> 使用 <code>选择项文本:章节文件名</code> 定义一个选择项。使用 <code>|</code> 来分隔不同选择项。示例如下：</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>choose:叫住她:Chapter-2.txt|回家:Chapter-3.txt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你只需要将选项的文本与选择选项后要进入的剧本名称一一对应起来，就可以实现分支选择的功能了。</p><h2 id="标签跳转" tabindex="-1"><a class="header-anchor" href="#标签跳转" aria-hidden="true">#</a> 标签跳转</h2><p>如果你想要创建一个分支，但是却觉得为此新建一个 TXT 文件太麻烦，你可以尝试使用以下方式在同一文件内实现创建分支和跳转语句。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果你的分支很长，我不建议你使用这种方式，因为一个 TXT 的行数不适宜太长，否则可能会导致加载慢、响应迟钝等性能问题。</p></div><h3 id="创建标签-label" tabindex="-1"><a class="header-anchor" href="#创建标签-label" aria-hidden="true">#</a> 创建标签（<code>label</code>）</h3><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>......
jumpLabel:label_1; // 跳转到 label_1
......
......
label:label_1; // 创建名为 label_1 的 label
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简而言之， <code>jumpLabel</code> 类似于 <code>goto</code> 语句，能够立刻让你的剧本跳到场景（TXT 文件）中的任意一个位置，而这个位置需要你用 <code>label</code> 创建。</p><p>如果把 <code>jumpLabel</code> 比作任意门，那么这个任意门的终点就是 <code>label</code> 所在的位置。</p><h3 id="添加选择项" tabindex="-1"><a class="header-anchor" href="#添加选择项" aria-hidden="true">#</a> 添加选择项</h3><p>有了上面的基础，你就可以通过 <code>choose</code> 来实现用分支来跳转到 <code>label</code> 所在的位置了：</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>......
choose:分支 1:label_1|分支 2:label_2;
label:label_1; // 创建名为 label_1 的 label
......
......
jumpLabel:end; // 跳转到 end
label:label_2; // 创建名为 label_2 的 label
......
......
jumpLabel:end; // 跳转到 end
label:end; // 创建名为 end 的 label
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，在每个分支的结尾，你应该用 <code>jumpLabel</code> 来跳转到你希望的位置。由于程序是线性执行的，所以如果你没有在分支的结束跳转，那么程序会继续往下运行，比如说：</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>......
choose:分支 1:label_1|分支 2:label_2;
label:label_1; // 创建名为 label_1 的 label
......
......
label:label_2; // 创建名为 label_2 的 label
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个剧本中，如果你选择了 <code>分支 2</code>，那么一切看起来好像没有问题。但是如果你选择了 <code>分支 1</code>，你会惊讶地发现，在 <code>分支 1</code> 执行完后，会继续执行 <code>分支 2</code>。那是因为程序按顺序继续执行下一行了，而你没有指定在分支结束后跳到哪里。</p>`,33),s=[l];function c(r,v){return a(),d("div",null,s)}const u=e(i,[["render",c],["__file","scenes.html.vue"]]);export{u as default};
