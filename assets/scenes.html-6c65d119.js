import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as i,e as a}from"./app-c15bbfd2.js";const d={},l=a(`<h1 id="シーンの切り替えと選択肢" tabindex="-1"><a class="header-anchor" href="#シーンの切り替えと選択肢" aria-hidden="true">#</a> シーンの切り替えと選択肢</h1><p>ビジュアルノベルゲームでは、シーンの切り替えと選択肢が欠かせないです。WebGAL でも、シーンの切り替えと選択肢をサポートしています。</p><p>スクリプトを複数の <code>txt</code> ファイルに分割し、簡単なステートメントを使用して現在実行中のシーンを切り替えることができます。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>シーンジャンプまたはシーンコールの後、シーンはクリアされません。これは、前のシーンの BGM 、立ち絵、背景画像、およびその他のリソースが次のシーンに継承されることも意味します。</p><p>WebGAL エディターを使用する場合は、WebGAL エディターは、1つのシーンのみをプレビューするときに前のシーンの効果が表示されないため、特に注意を払う必要があります。そのため、プレビュー効果と実際のゲーム実行効果は異なる場合があります。シーンジャンプの前にシーンクリーンアップを適切に処理することを検討する必要があります。</p></div><h2 id="シーンジャンプ" tabindex="-1"><a class="header-anchor" href="#シーンジャンプ" aria-hidden="true">#</a> シーンジャンプ</h2><p><code>Chapter-1.txt</code> と <code>Chapter-2.txt</code> の 2 つのスクリプトがある場合、<code>Chapter-1.txt</code> の実行が終了した後に <code>Chapter-2.txt</code> に対応するシーンにジャンプする場合は、次のステートメントを使用します。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeScene:Chapter-2.txt; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>(Chapter-1.txt) 
......
......
; // 次に実行するのは、Chapter-2.txt の内容です
changeScene:Chapter-2.txt;
...... 
......
(Chapter-2.txt)
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>このコマンドを実行すると、新しいシーンに切り替えてゲームを続行します。新しいシーンは、次にマウスをクリックした後に実行されます。</p><h2 id="シーンコール" tabindex="-1"><a class="header-anchor" href="#シーンコール" aria-hidden="true">#</a> シーンコール</h2><p>呼び出したシーンを実行した後、前のシーン(親シーン)に戻る必要がある場合は、<code>callScene</code> コマンドを使用してシーンを呼び出す必要があります。</p><p>ステートメント:</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>callScene:Chapter-2.txt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例:</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>(Chapter-1.txt)
...... 
......
callScene:Chapter-2.txt;
; // 次に実行するのは、Chapter-2.txt の内容です。
......
......
(Chapter-2.txt) 
......
......
(Chapter-2.txt の実行が完了しました)  
; // 親シーンに戻り、親シーンの実行を続行します。
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="選択肢" tabindex="-1"><a class="header-anchor" href="#選択肢" aria-hidden="true">#</a> 選択肢</h2><p>スクリプトに分岐オプションがあり、別のオプションを選択して別の章に進みたい場合は、<code>choose</code>を使用します。</p><p>選択肢を定義するには <code>choose text:chapter filename</code> を使う。 選択項目を区切るには <code>|</code> を使います。</p><p>以下に例を示す：</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>choose:彼女に声をかける:Chapter-2.txt|家に帰る:Chapter-3.txt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>オプションのテキストを、オプションを選択した後に入りたいスクリプトファイルと 1 対 1 で対応させるだけで、選択肢の機能を実現できます。</p><p>これにより、ゲームはタイトル画面に戻ります。</p><h2 id="ジャンプラベル" tabindex="-1"><a class="header-anchor" href="#ジャンプラベル" aria-hidden="true">#</a> ジャンプラベル</h2><p>分岐を作成したいが、新しい TXT ファイルを作成するのが面倒だと感じた場合は、以下を読んでみてください。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>分岐が非常に長い場合は、1 つの TXT の行数が長すぎてはいけないため、この方法を使用することはお勧めしません。</p></div><h3 id="ラベルを作成する" tabindex="-1"><a class="header-anchor" href="#ラベルを作成する" aria-hidden="true">#</a> ラベルを作成する</h3><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>......
jumpLabel:label_1; // label_1 へジャンプ
......
......
label:label_1; // label_1 というラベルを作成する
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>つまり、<code>jumpLabel</code> は <code>goto</code> ステートメントに似ており、スクリプトをシーン内の任意の位置(TXT ファイル)にすぐにジャンプさせることができ、この位置は ラベルを使用して作成する必要があります。</p><p><code>jumpLabel</code> を任意のゲートと比較すると、この任意のゲートの終点はラベルが配置されている位置になります。</p><h3 id="選択肢を作成する" tabindex="-1"><a class="header-anchor" href="#選択肢を作成する" aria-hidden="true">#</a> 選択肢を作成する</h3><p>choose コマンドを使用して選択肢を作成することができます。オプションを選択して、対応するラベルの位置にジャンプします。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>......
choose:テスト 1:label_1|テスト 2:label_2;
label:label_1; // label_1 というラベルを作成する
......
......
jumpLabel:end; // end へジャンプ
label:label_2; // label_2 というラベルを作成する
......
......
jumpLabel:end; // end へジャンプ
label:end; //// end というラベルを作成する
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各分岐の最後に、<code>jumpLabel</code> を使用して目的の場所にジャンプする必要があることに注意してください。ゲームは直線的に実行されるため、分岐の最後にジャンプしないと、ゲームは次のように継続して実行されます。</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>......
choose:テスト 1:label_1|テスト 2:label_2;  
label:label_1; // label_1 というラベルを作成する
......
......
label:label_2; // label_2 というラベルを作成する
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>このスクリプトでは、<code>テスト 2</code> を選択すると、すべて問題ないように見えます。ただし、<code>テスト 1</code> を選択すると、<code>テスト 1</code> の実行後に <code>テスト 2</code> が実行されることに驚かれることでしょう。これは、ゲームが順番に継続し実行され、分岐の終了後にジャンプするラベルを指定しなかったためです。</p>`,36),s=[l];function c(r,v){return n(),i("div",null,s)}const b=e(d,[["render",c],["__file","scenes.html.vue"]]);export{b as default};
