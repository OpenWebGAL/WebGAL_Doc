import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o,c as l,a as e,e as i,b as a,w as t,d as s}from"./app-2b136723.js";const u={},c=s(`<h1 id="backgrounds-and-figures" tabindex="-1"><a class="header-anchor" href="#backgrounds-and-figures" aria-hidden="true">#</a> Backgrounds and Figures</h1><h2 id="changing-backgrounds-figures" tabindex="-1"><a class="header-anchor" href="#changing-backgrounds-figures" aria-hidden="true">#</a> Changing Backgrounds/Figures</h2><p>For WebGAL to load backgrounds and figures, your background images should be placed inside the <code>background</code> folder, while figure images should be placed inside the <code>figure</code> folder.</p><p>You can then change the currently displayed background image and figure with the following simple statements:</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeBg:testBG03.jpg; // Change background
changeFigure:testFigure02.png; // Change figure
changeBg:none; // Close background
changeFigure:none; // Close figure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You may have noticed that after changing the background image or figure, you need to click the mouse again to display the next line of dialogue. If you want to execute the content of the next statement immediately after changing the background/figure, use the <code>-next</code> parameter.</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeBg:testBG03.jpg -next;
changeFigure:testFigure02.png -next; // Change figure
Ichishiki: Thank you, senior! ;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you do this, the program will execute the next statement immediately after the background/figure is replaced.</p><h2 id="placing-figures-in-different-positions" tabindex="-1"><a class="header-anchor" href="#placing-figures-in-different-positions" aria-hidden="true">#</a> Placing Figures in Different Positions</h2><p>You can now place different figures in three different positions on the page. Just add the position you want to place the figure at the end of the statement, as shown in the following example:</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeFigure:testFigure03.png -left;
changeFigure:testFigure04.png;
changeFigure:testFigure03.png -right;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The above three lines correspond to the left, center, and right positions, respectively. The figures in the three different positions are independent of each other, so if you need to clear a figure, you must clear it separately:</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeFigure:none -left;
changeFigure:none;
changeFigure:none -right;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you want to execute the next statement immediately after the figure is changed, the operation is the same as before, that is, add the parameter <code>-next</code> :</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>changeFigure:testFigure03.png -left -next;
changeFigure:testFigure04.png -next;
changeFigure:testFigure03.png -right -next;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="free-figures-with-id" tabindex="-1"><a class="header-anchor" href="#free-figures-with-id" aria-hidden="true">#</a> Free Figures with ID</h2><p>If you want to control the figure more precisely, you can specify the <code>id</code> and initial position for the figure:</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>; // A free figure with an initial position on the right
changeFigure:testFigure03.png -left -id=test1;
; // Close the figure by id
changeFigure:none -id=test1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>If you want to reset the position of a figure with an ID, close it first and then reopen it.</p></div><h2 id="placing-mini-avatars" tabindex="-1"><a class="header-anchor" href="#placing-mini-avatars" aria-hidden="true">#</a> Placing Mini Avatars</h2><p>Many games allow mini avatars to be placed in the lower left corner of the text box. Here is the syntax used in this engine:</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>; // Display minipic_test.png in the lower left corner
miniAvatar:minipic_test.png;
; // Close this mini avatar
miniAvatar:none;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="unlock-cgs-for-appreciation" tabindex="-1"><a class="header-anchor" href="#unlock-cgs-for-appreciation" aria-hidden="true">#</a> Unlock CGs for Appreciation</h2><p>Use <code>unlockCg</code> to unlock CGs in CG appreciation.</p><div class="language-ws line-numbers-mode" data-ext="ws"><pre class="language-ws"><code>; // Unlock CG and give it a name
unlockCg:xgmain.jpeg -name=&quot;Starlight Cafe and the Butterfly of Death&quot; -series=1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Among them, the <code>-series</code> parameter is optional, which represents which series the current figure belongs to. Figures of the same series will be merged and displayed later (ie, displayed as switchable CGs of the same series).</p><h2 id="set-effects-when-setting-figures" tabindex="-1"><a class="header-anchor" href="#set-effects-when-setting-figures" aria-hidden="true">#</a> Set Effects When Setting Figures</h2>`,27),g=s(`<p>You can set some transform and filter effects for the figure when setting the figure. Here is an example:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeFigure:stand.png -transform={&quot;alpha&quot;:1,&quot;position&quot;:{&quot;x&quot;:0,&quot;y&quot;:500},&quot;scale&quot;:{&quot;x&quot;:1,&quot;y&quot;:1},&quot;rotation&quot;:0,&quot;blur&quot;:0,&quot;oldFilm&quot;:0,&quot;dotFilm&quot;:0,&quot;reflectionFilm&quot;:0,&quot;glitchFilm&quot;:0,&quot;rgbFilm&quot;:0,&quot;godrayFilm&quot;:0} -next;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="set-transform-effects-for-existing-figures" tabindex="-1"><a class="header-anchor" href="#set-transform-effects-for-existing-figures" aria-hidden="true">#</a> Set Transform Effects for Existing Figures</h2>`,3),h=e("p",null,[i("You can also use "),e("code",null,"setTransform"),i(" to set effects for existing figures directly, for example:")],-1),f=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`setTransform:{"position":{"x":100,"y":0}} -target=fig-center -duration=0;
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),p=e("p",null,"Here a transform is set for an existing figure.",-1);function m(v,b){const n=d("RouterLink");return o(),l("div",null,[c,e("p",null,[i("For a description of the effect fields, please refer to "),a(n,{to:"/en/webgal-script/animation.html"},{default:t(()=>[i("Animation")]),_:1})]),g,e("p",null,[i("For a description of the effect fields, please refer to "),a(n,{to:"/en/webgal-script/animation.html"},{default:t(()=>[i("Animation")]),_:1})]),h,f,p])}const F=r(u,[["render",m],["__file","bg-and-figure.html.vue"]]);export{F as default};
